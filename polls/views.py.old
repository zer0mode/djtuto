# Create your views here.
from django.http import HttpResponse

from .models import Question

# def index(request):
# 	return HttpResponse("Hello, world. You're at the polls index.")

def index(request):
	latest_question_list = Question.objects.order_by('-pub_date')[:5]		# what does the '[:5]' do ?
	output = ', '.join([q.question_text for q in latest_question_list])
	return HttpResponse(output)
#
# There’s a problem here, though: the page’s design is hard-coded in the view.
# If you want to change the way the page looks, you’ll have to edit this Python code.
# So let’s use Django’s template system to separate the design from Python by creating a template that the view can use.

def detail(request, question_id):
	return HttpResponse("You're looking at question %s." % question_id)

def results(request, question_id):
	response = "You're looking at the results of question %s."
	return HttpResponse(response % question_id)

def vote(request, question_id):
	return HttpResponse("You're voting on question %s." % question_id)